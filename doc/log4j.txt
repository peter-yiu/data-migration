要在 Maven 项目中只排除特定版本的 log4j（例如 1.2.5、1.2.8、1.2.12），你可以通过使用 <exclusions> 标签，结合 Maven 的 <dependencyManagement> 来实现精确排除。这里是具体步骤：
1. 排除特定版本的 log4j

假设你已经知道哪个依赖项引入了 log4j，可以通过指定排除这些特定版本的 log4j。
方法 1: 使用 <exclusions> 在依赖项中排除

你可以在引入传递依赖的包中明确排除 log4j 的特定版本。比如：

xml

<dependency>
    <groupId>some.group</groupId>
    <artifactId>some-artifact</artifactId>
    <version>1.0.0</version>
    <exclusions>
        <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <!-- 排除特定版本 -->
            <version>[1.2.5,1.2.8,1.2.12]</version>
        </exclusion>
    </exclusions>
</dependency>

方法 2: 全局排除特定版本的 log4j

如果你想全局排除这些特定版本的 log4j，可以在 pom.xml 中通过 dependencyManagement 进行配置。

示例：

xml

<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>[1.2.5,1.2.8,1.2.12]</version> <!-- 明确排除这几个版本 -->
            <scope>provided</scope> <!-- 可选，防止自动引入 -->
        </dependency>
    </dependencies>
</dependencyManagement>

或者通过 <exclusions>：

xml

<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                    <!-- 可选，不指定版本将排除所有版本 -->
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</dependencyManagement>

方法 3: 使用 maven-enforcer-plugin 检测并阻止特定版本

Maven 提供了 maven-enforcer-plugin 来控制依赖版本。你可以使用它来阻止项目中使用特定版本的 log4j。

在 pom.xml 中添加插件配置：

xml

<build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
                <execution>
                    <id>enforce-versions</id>
                    <goals>
                        <goal>enforce</goal>
                    </goals>
                    <configuration>
                        <rules>
                            <bannedDependencies>
                                <searchIncludes>
                                    log4j:log4j
                                </searchIncludes>
                                <searchExcludes>
                                    log4j:log4j:1.2.5
                                    log4j:log4j:1.2.8
                                    log4j:log4j:1.2.12
                                </searchExcludes>
                            </bannedDependencies>
                        </rules>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>

这会阻止指定的版本在项目中被使用。
总结

    使用 <exclusions> 在依赖中排除 log4j 特定版本。
    全局排除：使用 dependencyManagement 来全局排除特定版本的 log4j。
    使用 maven-enforcer-plugin 检测并阻止特定版本。

这些方法可以确保在项目构建过程中排除特定的 log4j 版本。